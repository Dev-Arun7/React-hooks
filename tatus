[1mdiff --git a/src/App.js b/src/App.js[m
[1mindex 06bdc98..1adbb23 100644[m
[1m--- a/src/App.js[m
[1m+++ b/src/App.js[m
[36m@@ -15,7 +15,7 @@[m [mimport Test from './components/Test'[m
 function App() {[m
   return ([m
     <div className="App">[m
[31m-      <UseRef />[m
[32m+[m[32m      <Test />[m
     </div>[m
   );[m
 }[m
[1mdiff --git a/src/components/Hook6.js b/src/components/Hook6.js[m
[1mindex 78fdfb6..fa7b5f4 100644[m
[1m--- a/src/components/Hook6.js[m
[1m+++ b/src/components/Hook6.js[m
[36m@@ -20,4 +20,6 @@[m [mconst UseRef = () => {[m
     )[m
 }[m
 [m
[31m-export default UseRef[m
\ No newline at end of file[m
[32m+[m[32mexport default UseRef[m[41m                                                         [m
[41m+[m
[41m+[m
[1mdiff --git a/src/components/Test.js b/src/components/Test.js[m
[1mindex 55ab247..0bacfee 100644[m
[1m--- a/src/components/Test.js[m
[1m+++ b/src/components/Test.js[m
[36m@@ -1,23 +1,46 @@[m
[31m-// Learn useRef[m
[31m-import React, { useState, useRef, useEffect } from 'react';[m
[31m-[m
[31m-const Test = () => {[m
[31m-    const inputRef = useRef(null);[m
[31m-    useEffect(() => {[m
[31m-        console.log("Component rerendered...!")[m
[31m-        console.log(inputRef)[m
[31m-    })[m
[31m-    const handleClick = () => {[m
[31m-        inputRef.current.focus();[m
[31m-        inputRef.current.style.backgroundColor = "yellow";[m
[32m+[m
[32m+[m
[32m+[m[32m// Learn useMemo[m
[32m+[m[32mimport React, { useState, useMemo } from "react"[m
[32m+[m
[32m+[m
[32m+[m[32mfunction Test() {[m
[32m+[m[32m    const [counterOne, setCounterOne] = useState(0)[m
[32m+[m[32m    const [counterTwo, setCounterTwo] = useState(0)[m
[32m+[m
[32m+[m
[32m+[m[32m    // Function to increment counterOne[m
[32m+[m[32m    const incrementOne = () => {[m
[32m+[m
[32m+[m
[32m+[m[32m        setCounterOne(counterOne + 1)[m
     }[m
[32m+[m
[32m+[m
[32m+[m[32m    // Function to increment counterTw0[m
[32m+[m[32m    const incrementTwo = () => {[m
[32m+[m[32m        setCounterTwo(counterTwo + 1)[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m    const isEven = useMemo(() => {[m
[32m+[m[32m        let i = 0[m
[32m+[m[32m        // This while loop add some delay[m
[32m+[m[32m        while (i < 1000000000) i++[m
[32m+[m[32m        return counterOne % 2 === 0[m
[32m+[m[32m    }, [counterOne])[m
[32m+[m
[32m+[m
     return ([m
         <>[m
[31m-            <h2> Test </h2>[m
[31m-            <button onClick={handleClick} > Click me! </button>[m
[31m-            <input ref={inputRef} />[m
[32m+[m[32m            <h1> Learn useMemo </h1>[m
[32m+[m[32m            <button onClick={() => { incrementOne() }}> {`Counter: ${counterOne} `}</button>[m
[32m+[m[32m            <span> {isEven ? 'Even' : 'Odd'}</span>[m
[32m+[m[32m            <br />[m
[32m+[m[32m            <button onClick={incrementTwo}> {`Counter: ${counterTwo}`} </button>[m
         </>[m
     )[m
 }[m
 [m
[31m-export default Test[m
\ No newline at end of file[m
[32m+[m
[32m+[m[32mexport default Test[m
